% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lingmatch.R
\name{lma_simets}
\alias{lma_simets}
\title{Calculate similarity between vectors}
\usage{
lma_simets(a, b = NULL, metric = NULL, group = NULL, lag = 0,
  agg = TRUE, agg.mean = TRUE, pairwise = TRUE, symmetrical = FALSE,
  mean = FALSE, return.list = FALSE)
}
\arguments{
\item{a}{vector or matrix. If a vector, \code{b} must also be provided. If a matrix and \code{b}
is missing, each row will be compared. If a matrix and \code{b} is not missing, each row will
be compared with \code{b} or each row of \code{b}.}

\item{b}{vector or matrix to be compared with \code{a} or rows of \code{a}.}

\item{metric}{a character or vector of characters at least partially matching one of the
available metric names (or 'all' to explicitly include all metrics),
or a number or vector of numbers indicating the metric by index:
\tabular{ll}{
  \code{jaccard} \tab \code{sum(a & b) / sum(a | b)} \cr
  \code{euclidean} \tab \code{1 / (1 + sqrt(sum((a - b) ^ 2)))} \cr
  \code{canberra} \tab \code{mean(1 - abs(a - b) / (a + b))} \cr
  \code{cosine} \tab \code{sum(a * b) / sqrt(sum(a ^ 2 * sum(b ^ 2)))} \cr
  \code{pearson} \tab \code{(mean(a * b) - (mean(a) * mean(b))) / sqrt(mean(a ^ 2) - mean(a) ^ 2) /
    sqrt(mean(b ^ 2) - mean(b) ^ 2)} \cr
}}

\item{group}{if \code{b} is missing and \code{a} has multiple rows, this will be used to make
comparisons between rows of \code{a}, as modified by \code{agg} and \code{agg.mean}.}

\item{lag}{Amount to adjust the \code{b} index; either rows if \code{b} has multiple rows (e.g.,
for \code{lag = 1}, \code{a[1,]} is compared with \code{b[2,]}), or values otherwise (e.g.,
for \code{lag = 1}, \code{a[1]} is compared with \code{b[2]})}

\item{agg}{logical; if \code{FALSE}, only the boundary rows between groups will be compared, see
example.}

\item{agg.mean}{logical; if \code{FALSE} aggregated rows are summed instead of averaged.}

\item{pairwise}{logical; if \code{FALSE} and \code{a} and \code{b} are matrices with the same number of
rows, only paired rows are compared. Otherwise (and if only \code{a} is supplied), all pairwise
comparisons are made.}

\item{symmetrical}{logical; if \code{TRUE} and pairwise comparisons between \code{a} rows were made,
the results in the lower triangle are copied to the upper triangle.}

\item{mean}{logical; if \code{TRUE}, a single mean for each metric is returned per row of \code{a}.}

\item{return.list}{logical; if \code{TRUE}, a list-like object will always be returned, with an entry
for each metric, even when only one metric is requested.}
}
\value{
Output varies based on the dimensions of \code{a} and \code{b}:
  \tabular{ll}{
    \strong{output} \tab \strong{input} \cr
    a vector with a value per metric \tab only when \code{a} and \code{b} are both vectors \cr
    a vector with a value per row \tab any time a single value is expected per row:
      \code{a} or \code{b} is a vector, \code{a} and \code{b} are matrices with the same number of rows
      and \code{pairwise = FALSE}, a group is specified, or \code{mean = TRUE}, and only one metric is
      requested \cr
    a data.frame with a column per metric \tab when multiple metrics are requested in the previous
      case\cr
    sparse matrix \tab pairwise comparisons within an \code{a} matrix or between
      an \code{a} and \code{b} matrix, when only 1 metric is requested\cr
    a list with a sparse matrix per metric \tab when multiple metrics are requested in the previous
      case\cr
  }
}
\description{
Calculate similarity between vectors
}
\details{
Use \code{\link[RcppParallel]{setThreadOptions}} to change parallelization options; e.g., run
RcppParallel::setThreadOptions(4) before a call to lma_simets to set the number of CPU
threads to 4.
}
\examples{
text = c(
  'words of speaker A', 'more words from speaker A',
  'words from speaker B', 'more words from speaker B'
)
(dtm = lma_dtm(text))

# compare each entry
lma_simets(dtm)

# compare each entry with the mean of all entries
lma_simets(dtm, colMeans(dtm))

# compare by group (corresponding to speakers and turns in this case)
speaker = c('A', 'A', 'B', 'B')

## by default, consecutive rows from the same group are averaged:
lma_simets(dtm, group = speaker)

## with agg = FALSE, only the rows at the boundary between
## groups (rows 2 and 3 in this case) are used:
lma_simets(dtm, group = speaker, agg = FALSE)
}
